@page "/event-detail-report"
@using Client.Services
@inject ApiService ApiService

<div class="container py-4">
  <h3 class="mb-4">Relatório de Evento</h3>

  @* Dropdown para seleção de evento *@
  @if (_events == null)
  {
      <p>Carregando eventos…</p>
  }
  else
  {
      <select @onchange="OnEventChanged" class="form-select mb-4 w-50">
          <option value="">-- selecione um evento --</option>
          @foreach (var ev in _events)
          {
              <option value="@ev.Id">@ev.Name</option>
          }
      </select>
  }

  @* Card de detalhes e métricas *@
  @if (_detail != null)
  {
      <div class="mx-auto" style="max-width:600px;">
        <div class="card border-secondary mb-4">
          <div class="card-header bg-transparent border-0 text-primary">
            <h4 class="mb-0">@_detail.Name</h4>
          </div>
          <div class="card-body p-3">
            <div class="row g-4">
              @* Coluna de dados básicos *@
              <div class="col-12 col-md-6">
                <dl class="row mb-0">
                  <dt class="col-sm-4">Descrição</dt>
                  <dd class="col-sm-8">@_detail.Description</dd>

                  <dt class="col-sm-4">Local</dt>
                  <dd class="col-sm-8">@_detail.Location</dd>

                  <dt class="col-sm-4">Início</dt>
                  <dd class="col-sm-8">
                    @_detail.EventStartDate.ToString("dd/MM/yyyy HH:mm")
                  </dd>

                  <dt class="col-sm-4">Fim</dt>
                  <dd class="col-sm-8">
                    @_detail.EventEndDate.ToString("dd/MM/yyyy HH:mm")
                  </dd>

                  <dt class="col-sm-4">Capacidade</dt>
                  <dd class="col-sm-8">@_detail.Capacity</dd>

                  <dt class="col-sm-4">Categoria</dt>
                  <dd class="col-sm-8">@_detail.Category</dd>
                </dl>
              </div>

              @* Coluna de métricas com ícones e badges *@
              <div class="col-12 col-md-6">
                <h5 class="mb-3">Métricas</h5>
                <ul class="list-group list-group-flush">
                  <li class="list-group-item d-flex align-items-center justify-content-between">
                    <i class="bi bi-people-fill me-2 text-secondary"></i>
                    <span>Total de participantes</span>
                    <span class="badge bg-primary rounded-pill">@_detail.TotalParticipants</span>
                  </li>
                  <li class="list-group-item d-flex align-items-center justify-content-between">
                    <i class="bi bi-list-task me-2 text-secondary"></i>
                    <span>Total de atividades</span>
                    <span class="badge bg-success rounded-pill">@_detail.TotalActivities</span>
                  </li>
                  <li class="list-group-item d-flex align-items-center justify-content-between">
                    <i class="bi bi-clock-fill me-2 text-secondary"></i>
                    <span>Duração (horas)</span>
                    <span class="badge bg-warning rounded-pill">@_detail.DurationHours.ToString("F1")</span>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
  }
</div>

@code {
    private List<ApiService.EventDto>? _events;
    private ApiService.EventDetailReportDto? _detail;

    protected override async Task OnInitializedAsync()
    {
        _events = await ApiService.GetEventsAsync();
    }

    private async Task OnEventChanged(ChangeEventArgs e)
    {
        _detail = null;
        if (int.TryParse(e.Value?.ToString(), out var id))
        {
            _detail = await ApiService.GetRelatorioEventoAsync(id);
        }
    }
}
