@page "/NovoAviso/{eventId:int}"
@using Client.Services
@inject ApiService ApiService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject UserService UserService

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow border-0">
                <div class="card-header bg-primary text-white d-flex align-items-center">
                    <i class="bi bi-megaphone-fill fs-4 me-2"></i>
                    <h4 class="mb-0">Novo Aviso aos Participantes</h4>
                </div>

                <div class="card-body bg-white">
                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success text-center fw-bold">@successMessage</div>
                        <div class="text-center mt-4">
                            <button class="btn btn-outline-primary px-4 py-2" @onclick="Voltar">
                                üîô Voltar √† Dashboard
                            </button>
                        </div>
                    }
                    else
                    {
                        <EditForm Model="anuncio" OnValidSubmit="EnviarAviso">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-4">
                                <label class="form-label fw-semibold">üìù T√≠tulo do Aviso</label>
                                <InputText class="form-control shadow-sm" @bind-Value="anuncio.Title" placeholder="Ex: Mudan√ßa de local, hor√°rio..." />
                            </div>

                            <div class="mb-4">
                                <label class="form-label fw-semibold">üìÑ Conte√∫do</label>
                                <InputTextArea class="form-control shadow-sm" @bind-Value="anuncio.Content" rows="6" placeholder="Informe os detalhes que deseja partilhar com os participantes..." />
                            </div>

                            <div class="d-flex justify-content-end gap-2">
                                <button type="button" class="btn btn-outline-secondary" @onclick="Voltar">
                                    üîô Cancelar
                                </button>
                                <button type="submit" class="btn btn-success">
                                    üì¢ Publicar Aviso
                                </button>
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public int eventId { get; set; }

    private OrganizerAnnouncementDto anuncio = new();
    private string? successMessage;

    protected override async Task OnInitializedAsync()
    {
        var (userId, _) = await UserService.GetUserDataAsync();

        if (userId is null)
        {
            await JS.InvokeVoidAsync("alert", "Sess√£o expirada. Fa√ßa login novamente.");
            NavigationManager.NavigateTo("/login");
            return;
        }

        anuncio.EventId = eventId;
    }

    private async Task EnviarAviso()
    {
        if (string.IsNullOrWhiteSpace(anuncio.Title) || string.IsNullOrWhiteSpace(anuncio.Content))
        {
            await JS.InvokeVoidAsync("alert", "Preencha todos os campos antes de enviar.");
            return;
        }

        var token = await JS.InvokeAsync<string>("localStorage.getItem", "authToken");
        if (!string.IsNullOrEmpty(token))
        {
            ApiService.SetAuthToken(token);
        }

        var result = await ApiService.EnviarAnuncioAsync(anuncio);
        if (result)
        {
            successMessage = "‚úÖ Aviso enviado com sucesso!";
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Erro ao enviar o aviso.");
        }
    }

    private void Voltar()
    {
        NavigationManager.NavigateTo("/Home_Organizador");
    }

    public class OrganizerAnnouncementDto
    {
        public int EventId { get; set; }
        public string Title { get; set; } = string.Empty;
        public string Content { get; set; } = string.Empty;
    }
}
