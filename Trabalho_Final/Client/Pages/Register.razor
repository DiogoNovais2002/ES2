@page "/register"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="login-container">
  <div class="login-card">
    <div class="card-header"></div>

    <div class="card-body">
      <h2 style="color: #007bff;">Criar Conta</h2>

      <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />

        
        <div class="input-group">
          <span class="input-icon">
            <i class="fas fa-user"></i>
          </span>
          <InputText @bind-Value="registerModel.Name" class="form-control" placeholder="Nome Completo" />
        </div>

        <!-- Campo E-mail -->
        <div class="input-group">
          <span class="input-icon">
            <i class="fas fa-envelope"></i>
          </span>
          <InputText @bind-Value="registerModel.Email" class="form-control" placeholder="E-mail" />
        </div>

        <!-- Campo Username -->
        <div class="input-group">
          <span class="input-icon">
            <i class="fas fa-user"></i>
          </span>
          <InputText @bind-Value="registerModel.UserName" class="form-control" placeholder="Utilizador" />
        </div>


        <div class="input-group">
                    <span class="input-icon">
                        <i class="fas fa-lock"></i>
                    </span>
          <InputText @bind-Value="registerModel.Password" class="form-control"
                     type="@(_showPassword ? "text" : "password")"
                     placeholder="Password"/>
          <button type="button" class="toggle-password" @onclick="TogglePasswordVisibility">
            <i class="fas @(_showPassword ? "fa-eye-slash" : "fa-eye")"></i>
          </button>
        </div>


        <div class="input-group">
                    <span class="input-icon">
                        <i class="fas fa-lock"></i>
                    </span>
          <InputText @bind-Value="registerModel.ConfirmPassword" class="form-control"
                     type="@(_showPassword ? "text" : "password")"
                     placeholder="Password"/>
          <button type="button" class="toggle-password" @onclick="TogglePasswordVisibility">
            <i class="fas @(_showPassword ? "fa-eye-slash" : "fa-eye")"></i>
          </button>
        </div>

        <button type="submit" class="login-button">Registar</button>

        <!-- Link para voltar ao Login -->
        <div class="create-account">
          <a href="login">Voltar ao Login</a>
        </div>
      </EditForm>

      @if (errorMessage != null)
      {
        <div class="alert alert-danger">
          @errorMessage
        </div>
      }

      @if (successMessage != null)
      {
        <div class="alert alert-success">
          @successMessage
        </div>
      }
    </div>
  </div>
</div>

@code {
    private RegisterRequest registerModel = new();
    private string? errorMessage;
    private string? successMessage;

    private async Task HandleRegister()
    {
        try
        {
            
            var response = await Http.PostAsJsonAsync("http://localhost:5140/api/auth/register", registerModel);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Usuário registrado com sucesso. Você pode agora fazer login.";
                errorMessage = null;

                
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                errorMessage = "Erro ao registrar o usuário. Verifique os dados e tente novamente.";
                successMessage = null;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro ao tentar conectar: {ex.Message}";
            successMessage = null;
        }
    }

    public class RegisterRequest
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public string UserName { get; set; }
        public string Password { get; set; }
        public string ConfirmPassword { get; set; }
    }
    
    private bool _showPassword = false;

    private void TogglePasswordVisibility()
    {
      _showPassword = !_showPassword;
    }

}
