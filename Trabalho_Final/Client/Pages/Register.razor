@page "/register"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="login-container">
    <div class="login-card">
        <div class="card-header2">
            <h2>Criar Conta</h2>
            <p>Preenche os dados para te registares</p>
        </div>

        <div class="card-body">
            <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-grid">
                    <div class="form-column">
                        <div class="form-group">
                            <label>Nome</label>
                            <div class="input-wrapper">
                                <i class="fas fa-user icon-left"></i>
                                <InputText @bind-Value="registerModel.Name" class="form-control" placeholder="Nome Completo" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Email</label>
                            <div class="input-wrapper">
                                <i class="fas fa-envelope icon-left"></i>
                                <InputText @bind-Value="registerModel.Email" class="form-control" placeholder="exemplo@gmail.com" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Utilizador</label>
                            <div class="input-wrapper">
                                <i class="fas fa-user icon-left"></i>
                                <InputText @bind-Value="registerModel.UserName" class="form-control" placeholder="Nome de utilizador" />
                            </div>
                        </div>
                    </div>

                    <div class="form-column">
                        <div class="form-group">
                            <label>Password</label>
                            <div class="input-wrapper">
                                <i class="fas fa-lock icon-left"></i>
                                <InputText @bind-Value="registerModel.Password" class="form-control"
                                           type="@(_showPassword ? "text" : "password")"
                                           placeholder="••••••••" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Confirmar Password</label>
                            <div class="input-wrapper">
                                <i class="fas fa-lock icon-left"></i>
                                <InputText @bind-Value="registerModel.ConfirmPassword" class="form-control"
                                           type="@(_showPassword ? "text" : "password")"
                                           placeholder="••••••••" />
                            </div>
                        </div>

                        <button type="submit" class="login-button mt-3">Registar</button>
                    </div>
                </div>

                <div class="create-account">
                    <a href="/login">Voltar ao Login</a>
                </div>

                @if (errorMessage != null)
                {
                    <div class="error-message">@errorMessage</div>
                }

                @if (successMessage != null)
                {
                    <div class="success-message">@successMessage</div>
                }
            </EditForm>
        </div>
    </div>
</div>

<style>
    .form-grid {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .form-column {
        flex: 1;
        min-width: 200px;
    }

    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f4f4f4;
    }

    .login-card {
        background-color: white;
        padding: 1rem;
        border-radius: 1rem;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
        width: 100%;
        max-width: 700px;
        text-align: center;
    }

    .card-header2 h2 {
        margin-top: 1rem;
        margin-bottom: 0.5rem;
    }

    .card-header2 p {
        color: #555;
    }

    .form-group {
        margin-bottom: 1.2rem;
        text-align: left;
    }

    .input-wrapper {
        position: relative;
    }

    .icon-left {
        position: absolute;
        top: 50%;
        left: 10px;
        transform: translateY(-50%);
        color: #999;
    }

    .form-control {
        width: 100%;
        padding: 0.6rem 2.5rem;
        border-radius: 0.5rem;
        border: 1px solid #ccc;
    }

    .login-button {
        background-color: blue;
        border: none;
        color: white;
        padding: 0.8rem 1.2rem;
        width: 100%;
        border-radius: 0.5rem;
        font-size: 1rem;
        cursor: pointer;
    }

    .login-button:hover {
        background-color: darkblue;
    }

    .create-account {
        margin-top: 1rem;
        font-size: 0.9rem;
    }

    .create-account a {
        font-weight: bold;
        color: #007bff;
        text-decoration: none;
    }

    .create-account a:hover {
        text-decoration: underline;
    }

    .error-message {
        margin-top: 1rem;
        color: #dc3545;
        font-weight: bold;
    }

    .success-message {
        margin-top: 1rem;
        color: #28a745;
        font-weight: bold;
    }
</style>

@code {
    private RegisterRequest registerModel = new();
    private string? errorMessage;
    private string? successMessage;

    private async Task HandleRegister()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("http://localhost:5140/api/auth/register", registerModel);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Usuário registado com sucesso. Podes agora fazer login.";
                errorMessage = null;
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                errorMessage = "Erro ao registar. Verifica os dados.";
                successMessage = null;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro ao tentar conectar: {ex.Message}";
            successMessage = null;
        }
    }

    public class RegisterRequest
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public string UserName { get; set; }
        public string Password { get; set; }
        public string ConfirmPassword { get; set; }
    }

    private bool _showPassword = false;

    private void TogglePasswordVisibility()
    {
        _showPassword = !_showPassword;
    }
}
