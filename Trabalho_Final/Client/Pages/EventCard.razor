@using Client.Services
@inject IJSRuntime JS

<div class="event-card shadow-sm rounded-3 border p-4 mb-4 bg-white">
    <div class="mb-3">
        <h4 class="mb-1 text-dark">@Event.Name</h4>
        <small class="text-muted">
            <i class="bi bi-calendar3 me-1"></i>
            @Event.EventStartDate.ToString("dd/MM/yyyy")
        </small>
    </div>

    <div class="mb-3">
        <p class="text-secondary mb-0">@Event.Description</p>
    </div>

    @if (userTypeLoaded && userType == "Participante")
    {
        <div class="text-end">
            <button class="btn btn-outline-primary" @onclick="() => OnParticipate.InvokeAsync(Event.Id)">
                Participar
            </button>
        </div>
    }
</div>

@code {
    [Parameter] public ApiService.EventDto Event { get; set; }
    [Parameter] public EventCallback<int> OnParticipate { get; set; }

    private string? userType;
    private bool userTypeLoaded;

    protected override async Task OnInitializedAsync()
    {
        userType = await JS.InvokeAsync<string>("localStorage.getItem", "userType");
        userTypeLoaded = true;
    }
}